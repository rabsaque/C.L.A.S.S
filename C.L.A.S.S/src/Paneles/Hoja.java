/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Paneles;

import Controladores.Conectar;
import java.awt.EventQueue;
import java.beans.Beans;
import java.io.FileOutputStream;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.RollbackException;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.util.IOUtils;
import org.apache.poi.xwpf.usermodel.ParagraphAlignment;
import org.apache.poi.xwpf.usermodel.UnderlinePatterns;
import org.apache.poi.xwpf.usermodel.XWPFDocument;
import org.apache.poi.xwpf.usermodel.XWPFParagraph;
import org.apache.poi.xwpf.usermodel.XWPFRun;
import Controladores.Conectar;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.awt.EventQueue;
import java.sql.ResultSet;
import javax.swing.JFrame;
import java.io.*;
import java.util.Date;
import org.apache.poi.*;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Calendar;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
/**
 *
 * @author Traximus
 */
public class Hoja extends JPanel {
    public Float saldnu,valord,nesl,sal;
    public String Numerocliente;
    
    public Hoja() {
        
        
         try {
             initComponents();
        if (!Beans.isDesignTime()) {
            entityManager.getTransaction().begin();
        }
          String sql3="SELECT nro_cta  FROM cuentas";
            ResultSet rs = Conectar.getRegistros(sql3);
            
            
            while (rs.next()) {
                this.jComboBox2.addItem(rs.getObject(1).toString());
                System.out.println(""+rs.getObject(1).toString());
            }
            
            /**
             *
             * @return
             */
        } catch (SQLException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
         Login user = new Login();
         
     
    
       
    }
public String getNumerocliente() {
        return Numerocliente;

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        entityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("libro_alcaldia_ssr?zeroDateTimeBehavior=convertToNullPU").createEntityManager();
        query = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT l FROM LibroAuxiliar l");
        list = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : org.jdesktop.observablecollections.ObservableCollections.observableList(query.getResultList());
        masterScrollPane = new javax.swing.JScrollPane();
        masterTable = new javax.swing.JTable();
        diaLabel = new javax.swing.JLabel();
        nrochequeLabel = new javax.swing.JLabel();
        OPLabel = new javax.swing.JLabel();
        CELabel = new javax.swing.JLabel();
        beneficiarioLabel = new javax.swing.JLabel();
        rifLabel = new javax.swing.JLabel();
        descripcionLabel = new javax.swing.JLabel();
        debeLabel = new javax.swing.JLabel();
        haberLabel = new javax.swing.JLabel();
        saldoLabel = new javax.swing.JLabel();
        bancoLabel = new javax.swing.JLabel();
        mesLabel = new javax.swing.JLabel();
        diaField = new javax.swing.JTextField();
        nrochequeField = new javax.swing.JTextField();
        OPField = new javax.swing.JTextField();
        CEField = new javax.swing.JTextField();
        beneficiarioField = new javax.swing.JTextField();
        rifField = new javax.swing.JTextField();
        descripcionField = new javax.swing.JTextField();
        debeField = new javax.swing.JTextField();
        haberField = new javax.swing.JTextField();
        saldoField = new javax.swing.JTextField();
        bancoField = new javax.swing.JTextField();
        mesField = new javax.swing.JTextField();
        saveButton = new javax.swing.JButton();
        refreshButton = new javax.swing.JButton();
        newButton = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton8 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jButton7 = new javax.swing.JButton();
        jComboBox2 = new javax.swing.JComboBox();
        jComboBox1 = new javax.swing.JComboBox();
        jButton9 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator5 = new javax.swing.JSeparator();
        jSeparator6 = new javax.swing.JSeparator();
        jLabel5 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jSeparator7 = new javax.swing.JSeparator();
        jSeparator8 = new javax.swing.JSeparator();
        jSeparator9 = new javax.swing.JSeparator();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();

        FormListener formListener = new FormListener();

        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, list, masterTable);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${mes}"));
        columnBinding.setColumnName("Mes");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${dia}"));
        columnBinding.setColumnName("Dia");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${nrocheque}"));
        columnBinding.setColumnName("Nrocheque");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${OP}"));
        columnBinding.setColumnName("OP");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${CE}"));
        columnBinding.setColumnName("CE");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${beneficiario}"));
        columnBinding.setColumnName("Beneficiario");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${rif}"));
        columnBinding.setColumnName("Rif");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${descripcion}"));
        columnBinding.setColumnName("Descripcion");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${debe}"));
        columnBinding.setColumnName("Debe");
        columnBinding.setColumnClass(Float.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${haber}"));
        columnBinding.setColumnName("Haber");
        columnBinding.setColumnClass(Float.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${saldo}"));
        columnBinding.setColumnName("Saldo");
        columnBinding.setColumnClass(Float.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${banco}"));
        columnBinding.setColumnName("Banco");
        columnBinding.setColumnClass(String.class);
        bindingGroup.addBinding(jTableBinding);

        masterScrollPane.setViewportView(masterTable);

        diaLabel.setText("Dia:");

        nrochequeLabel.setText("Nrocheque:");

        OPLabel.setText("OP:");

        CELabel.setText("CE:");

        beneficiarioLabel.setText("Beneficiario:");

        rifLabel.setText("Rif:");

        descripcionLabel.setText("Descripcion:");

        debeLabel.setText("Debe:");

        haberLabel.setText("Haber:");

        saldoLabel.setText("Saldo:");

        bancoLabel.setText("Banco:");

        mesLabel.setText("Mes:");

        diaField.setEditable(false);

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.dia}"), diaField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceUnreadableValue("null");
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), diaField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        nrochequeField.setEditable(false);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.nrocheque}"), nrochequeField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceUnreadableValue("null");
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), nrochequeField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.OP}"), OPField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceUnreadableValue("null");
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), OPField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.CE}"), CEField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceUnreadableValue("null");
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), CEField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.beneficiario}"), beneficiarioField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceUnreadableValue("null");
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), beneficiarioField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.rif}"), rifField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceUnreadableValue("null");
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), rifField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.descripcion}"), descripcionField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceUnreadableValue("null");
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), descripcionField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.debe}"), debeField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceUnreadableValue("null");
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), debeField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        haberField.setEditable(false);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.haber}"), haberField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceUnreadableValue("null");
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), haberField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        saldoField.setEditable(false);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.saldo}"), saldoField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceUnreadableValue("null");
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), saldoField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        bancoField.setEditable(false);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.banco}"), bancoField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceUnreadableValue("null");
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), bancoField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        mesField.setEditable(false);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.mes}"), mesField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceUnreadableValue("null");
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), mesField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        saveButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Guardar.png"))); // NOI18N
        saveButton.setText("Save");
        saveButton.addActionListener(formListener);

        refreshButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Editcliente.png"))); // NOI18N
        refreshButton.addActionListener(formListener);

        newButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon-register.gif"))); // NOI18N
        newButton.addActionListener(formListener);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Edit Text Document Cancel.png"))); // NOI18N
        jButton1.addActionListener(formListener);

        jLabel6.setText("INGRESAR DATA");

        jLabel4.setText("CREAR CUENTA");

        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/abajo.png"))); // NOI18N
        jButton6.addActionListener(formListener);

        jLabel2.setText("INFORME DE CUENTAS");

        jLabel3.setText("USUARIOS");

        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Clientes3.png"))); // NOI18N
        jButton8.addActionListener(formListener);

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/919dd7fa.png"))); // NOI18N
        jButton3.addActionListener(formListener);

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/report.png"))); // NOI18N
        jButton2.addActionListener(formListener);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jButton4.setText("Buscar");
        jButton4.addActionListener(formListener);

        jButton5.setText("Limpiar");
        jButton5.addActionListener(formListener);

        jLabel9.setText("C I/RIF");

        jLabel11.setText("RESULTADO DE LA BUSQUEDA");

        jLabel7.setText("BUSQUEDA POR BENEFICIARIO");

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/report.png"))); // NOI18N
        jButton7.addActionListener(formListener);

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione" }));

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione", "Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre", "Anual" }));

        jButton9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/report.png"))); // NOI18N
        jButton9.addActionListener(formListener);

        jLabel8.setText("GENERAR INFORMES");

        jLabel12.setText("Informe por cuenta individual");

        jLabel10.setText("Informe  general de cuentas  ");

        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jSeparator4.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jLabel1.setText("OPCIONES");

        jLabel5.setText("GENERAR XSL");

        jLabel13.setText("GENERAR XSL");

        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Logo Alcaldia.png"))); // NOI18N

        jLabel15.setText("Bienvenido Usted esta: ");

        jLabel17.setText("ANULAR");

        jLabel18.setText("NUEVO");

        jLabel19.setText("GUARDAR");

        jLabel20.setText("REFRESCAR");

        jLabel22.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(0, 0, 255));
        jLabel22.setText("Conectado");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(13, Short.MAX_VALUE)
                .addComponent(masterScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 1131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(17, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(diaLabel)
                            .addComponent(nrochequeLabel)
                            .addComponent(OPLabel)
                            .addComponent(CELabel)
                            .addComponent(beneficiarioLabel)
                            .addComponent(rifLabel)
                            .addComponent(descripcionLabel)
                            .addComponent(debeLabel)
                            .addComponent(haberLabel)
                            .addComponent(saldoLabel)
                            .addComponent(bancoLabel)
                            .addComponent(mesLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(bancoField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(saldoField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(haberField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(debeField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(descripcionField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rifField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(beneficiarioField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(CEField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(OPField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nrochequeField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(diaField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(mesField, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(newButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(33, 33, 33)
                                        .addComponent(jLabel17))
                                    .addGroup(layout.createSequentialGroup()
                                        .addContainerGap()
                                        .addComponent(jLabel15)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel18)
                                        .addGap(58, 58, 58)
                                        .addComponent(jLabel19))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel22)
                                        .addGap(89, 89, 89)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel20))
                            .addComponent(refreshButton, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jSeparator6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(41, 41, 41)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jLabel11)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(76, 76, 76)
                            .addComponent(jLabel9)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton4)
                        .addGap(18, 18, 18)
                        .addComponent(jButton5))
                    .addComponent(jSeparator9, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(145, 145, 145)
                        .addComponent(jLabel21)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel16)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jLabel5))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator7, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(jLabel8))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator8, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton9))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jLabel13))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel14)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel3)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)
                            .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel6)
                            .addComponent(jLabel2))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(masterScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 132, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator3)
                    .addComponent(jSeparator2)
                    .addComponent(jSeparator4)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel3))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(1, 1, 1)
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jButton4)
                                    .addComponent(jButton5))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jSeparator9, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel16)
                                    .addComponent(jLabel21)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(16, 16, 16)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel10)
                                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(1, 1, 1)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSeparator7, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel12)
                                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel13)
                                .addGap(18, 18, 18)
                                .addComponent(jSeparator8, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel14)))
                        .addGap(0, 3, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(diaLabel)
                            .addComponent(diaField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(nrochequeLabel)
                            .addComponent(nrochequeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(OPLabel)
                            .addComponent(OPField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(CELabel)
                            .addComponent(CEField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(beneficiarioLabel)
                            .addComponent(beneficiarioField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rifLabel)
                            .addComponent(rifField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(descripcionLabel)
                            .addComponent(descripcionField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(debeLabel)
                            .addComponent(debeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(haberLabel)
                            .addComponent(haberField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(saldoLabel)
                            .addComponent(saldoField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bancoLabel)
                            .addComponent(bancoField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(mesLabel)
                            .addComponent(mesField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(newButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(refreshButton, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel17)
                            .addComponent(jLabel18)
                            .addComponent(jLabel19)
                            .addComponent(jLabel20))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(jLabel22))))
                .addContainerGap())
        );

        bindingGroup.bind();
    }

    // Code for dispatching events from components to event handlers.

    private class FormListener implements java.awt.event.ActionListener {
        FormListener() {}
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            if (evt.getSource() == saveButton) {
                Hoja.this.saveButtonActionPerformed(evt);
            }
            else if (evt.getSource() == refreshButton) {
                Hoja.this.refreshButtonActionPerformed(evt);
            }
            else if (evt.getSource() == newButton) {
                Hoja.this.newButtonActionPerformed(evt);
            }
            else if (evt.getSource() == jButton1) {
                Hoja.this.jButton1ActionPerformed(evt);
            }
            else if (evt.getSource() == jButton6) {
                Hoja.this.jButton6ActionPerformed(evt);
            }
            else if (evt.getSource() == jButton8) {
                Hoja.this.jButton8ActionPerformed(evt);
            }
            else if (evt.getSource() == jButton3) {
                Hoja.this.jButton3ActionPerformed(evt);
            }
            else if (evt.getSource() == jButton2) {
                Hoja.this.jButton2ActionPerformed(evt);
            }
            else if (evt.getSource() == jButton4) {
                Hoja.this.jButton4ActionPerformed(evt);
            }
            else if (evt.getSource() == jButton7) {
                Hoja.this.jButton7ActionPerformed(evt);
            }
            else if (evt.getSource() == jButton9) {
                Hoja.this.jButton9ActionPerformed(evt);
            }
            else if (evt.getSource() == jButton5) {
                Hoja.this.jButton5ActionPerformed(evt);
            }
        }
    }// </editor-fold>//GEN-END:initComponents

    

    @SuppressWarnings("unchecked")
    private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonActionPerformed
        entityManager.getTransaction().rollback();
        entityManager.getTransaction().begin();
        java.util.Collection data = query.getResultList();
        for (Object entity : data) {
            entityManager.refresh(entity);
        }
        list.clear();
        list.addAll(data);
    }//GEN-LAST:event_refreshButtonActionPerformed

    private void newButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newButtonActionPerformed
        Paneles.LibroAuxiliar l = new Paneles.LibroAuxiliar();
        entityManager.persist(l);
        list.add(l);
        int row = list.size() - 1;
        masterTable.setRowSelectionInterval(row, row);
        masterTable.scrollRectToVisible(masterTable.getCellRect(row, 0, true));
    }//GEN-LAST:event_newButtonActionPerformed
    
    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        try {
            entityManager.getTransaction().commit();
            entityManager.getTransaction().begin();
        } catch (RollbackException rex) {
            rex.printStackTrace();
            entityManager.getTransaction().begin();
            List<Paneles.LibroAuxiliar> merged = new ArrayList<Paneles.LibroAuxiliar>(list.size());
            for (Paneles.LibroAuxiliar l : list) {
                merged.add(entityManager.merge(l));
            }
            list.clear();
            list.addAll(merged);
        }
    }//GEN-LAST:event_saveButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       
        
        sal = Float.parseFloat(saldoField.getText());
        
        String sql6="SELECT cuentas.saldo, debe " +
"FROM cuentas, libro_auxiliar" +
" WHERE cuentas.nro_cta = '"+bancoField.getText()+"' AND libro_auxiliar.nrocheque ='"+nrochequeField.getText()+"'";
        ResultSet users6 = Conectar.getRegistros(sql6);
        System.out.println(sql6);
        try {
            if(users6.next()){
                  nesl = users6.getFloat(1);
                 valord = users6.getFloat(2);
                
                
            }
             
            if(0.0 <= valord){
                saldnu = nesl+sal;
            }else{
                saldnu = sal-nesl;
            }
             
        } catch (SQLException ex) {
            Logger.getLogger(Hoja.class.getName()).log(Level.SEVERE, null, ex);
        }
        String sql2="UPDATE libro_auxiliar  set nrocheque = '"+nrochequeField.getText()+" ANULADO' Where nrocheque='"+nrochequeField.getText()+"'";
        Conectar.guardarRegistro(sql2);
        System.out.println(sql2);
        String sql7="UPDATE cuentas  set saldo = '"+saldnu+"' Where nro_cta='"+bancoField.getText()+"'";
        Conectar.guardarRegistro(sql7);
         System.out.println(sql7);
        JOptionPane.showMessageDialog(null, "Cheque Anulado");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        EventQueue.invokeLater(new Runnable() {
            public void run() {
                JFrame frame = new JFrame();

                try {
                    frame.setContentPane(new Ingresos());
                } catch (SQLException ex) {
                    Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                }

                frame.pack();
                frame.setVisible(true);
            }
        });
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        EventQueue.invokeLater(new Runnable() {
            public void run() {
                JFrame frame = new JFrame();

                frame.setContentPane(new Usuarios());

                frame.pack();
                frame.setVisible(true);
            }
        });
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        CrearCta crear = new CrearCta();
        crear.setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        EventQueue.invokeLater(new Runnable() {
            public void run() {
                JFrame frame = new JFrame();
                frame.setContentPane(new MostrarDatosCta());

                frame.pack();
                frame.setVisible(true);
            }
        });

        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        String mesb = jComboBox1.getSelectedItem().toString();
        if(mesb=="Enero"){
            try {

                String sql = "SELECT *  FROM libro_auxiliar  where mes = '1' ORDER BY dia ASC";
                ResultSet users = Conectar.getRegistros(sql);
                HSSFWorkbook libro = new HSSFWorkbook();

                //Creamos una instancia de la clase HSSFSheet llamada hoja y la creamos
                HSSFSheet hoja = libro.createSheet();

                HSSFRow encabezados = hoja.createRow(0);
                HSSFCell enc1 = encabezados.createCell(1);
                HSSFCell enc2 = encabezados.createCell(2);
                HSSFCell enc3 = encabezados.createCell(3);
                HSSFCell enc4 = encabezados.createCell(4);
                HSSFCell enc5 = encabezados.createCell(5);
                HSSFCell enc6 = encabezados.createCell(6);
                HSSFCell enc7 = encabezados.createCell(7);
                HSSFCell enc8 = encabezados.createCell(8);
                HSSFCell enc9 = encabezados.createCell(9);
                HSSFCell enc10 = encabezados.createCell(10);
                HSSFCell enc11 = encabezados.createCell(11);
                HSSFCell enc12= encabezados.createCell(12);
                enc1.setCellValue("Mes");
                enc2.setCellValue("Dia");
                enc3.setCellValue("Nro_Cheque");
                enc4.setCellValue("O/P");
                enc5.setCellValue("C/E");
                enc6.setCellValue("Beneficiario");
                enc7.setCellValue("RIF/CI");
                enc8.setCellValue("Observaciones");
                enc9.setCellValue("Debe");
                enc10.setCellValue("Haber");
                enc11.setCellValue("Saldo");
                enc12.setCellValue("Nro Cta");

                HSSFRow Info = hoja.createRow(32);
                //FileInputStream obtains input bytes from the image file

                HSSFCell rif = Info.createCell(1);

                rif.setCellValue("Alcaldia De San Sebastian El Renacer Rif j-124563");

                while(users.next()){
                    HSSFRow fila = hoja.createRow(users.getRow());
                    HSSFCell celdauno = fila.createCell(1);
                    HSSFCell celdados = fila.createCell(2);
                    HSSFCell celdatres = fila.createCell(3);
                    HSSFCell celdacuatro = fila.createCell(4);
                    HSSFCell celdacinco = fila.createCell(5);
                    HSSFCell celdaseis = fila.createCell(6);
                    HSSFCell celdasiete = fila.createCell(7);
                    HSSFCell celdaocho = fila.createCell(8);
                    HSSFCell celdanueve = fila.createCell(9);
                    HSSFCell celdadiez = fila.createCell(10);
                    HSSFCell celdaonce = fila.createCell(11);
                    HSSFCell celdadoce = fila.createCell(12);

                    celdauno.setCellValue(users.getString(12));
                    celdados.setCellValue(users.getString(1));
                    celdatres.setCellValue(users.getString(2));
                    celdacuatro.setCellValue(users.getString(3));
                    celdacinco.setCellValue(users.getString(4));
                    celdaseis.setCellValue(users.getString(5));
                    celdasiete.setCellValue(users.getString(6));
                    celdaocho.setCellValue(users.getString(7));
                    celdanueve.setCellValue(users.getString(8));
                    celdadiez.setCellValue(users.getString(9));
                    celdaonce.setCellValue(users.getString(10));
                    celdadoce.setCellValue(users.getString(11));

                    System.out.println("Esta Hecho master!"+users.getString(11));
                }
                String ex = "Informe_Enero";
                FileOutputStream archivo = new FileOutputStream(""+ex+".xls");
                libro.write(archivo);
                archivo.close();
            } catch (SQLException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            }
            JOptionPane.showMessageDialog(null, "Se ha creado el Excel con exito!!!", "Aviso",1);

        }
        if(mesb=="Febrero"){
            try {

                String sql = "SELECT *  FROM libro_auxiliar  where mes = '2' ORDER BY dia ASC";
                ResultSet users = Conectar.getRegistros(sql);
                HSSFWorkbook libro = new HSSFWorkbook();

                //Creamos una instancia de la clase HSSFSheet llamada hoja y la creamos
                HSSFSheet hoja = libro.createSheet();
                HSSFRow encabezados = hoja.createRow(0);
                HSSFCell enc1 = encabezados.createCell(1);
                HSSFCell enc2 = encabezados.createCell(2);
                HSSFCell enc3 = encabezados.createCell(3);
                HSSFCell enc4 = encabezados.createCell(4);
                HSSFCell enc5 = encabezados.createCell(5);
                HSSFCell enc6 = encabezados.createCell(6);
                HSSFCell enc7 = encabezados.createCell(7);
                HSSFCell enc8 = encabezados.createCell(8);
                HSSFCell enc9 = encabezados.createCell(9);
                HSSFCell enc10 = encabezados.createCell(10);
                HSSFCell enc11 = encabezados.createCell(11);
                HSSFCell enc12= encabezados.createCell(12);
                enc1.setCellValue("Mes");
                enc2.setCellValue("Dia");
                enc3.setCellValue("Nro_Cheque");
                enc4.setCellValue("O/P");
                enc5.setCellValue("C/E");
                enc6.setCellValue("Beneficiario");
                enc7.setCellValue("RIF/CI");
                enc8.setCellValue("Observaciones");
                enc9.setCellValue("Debe");
                enc10.setCellValue("Haber");
                enc11.setCellValue("Saldo");
                enc12.setCellValue("Nro Cta");

                HSSFRow Info = hoja.createRow(32);
                HSSFCell rif = Info.createCell(1);
                rif.setCellValue("Alcaldia De San Sebastian El Renacer Rif j-124563");

                while(users.next()){
                    HSSFRow fila = hoja.createRow(users.getRow());
                    HSSFCell celdauno = fila.createCell(1);
                    HSSFCell celdados = fila.createCell(2);
                    HSSFCell celdatres = fila.createCell(3);
                    HSSFCell celdacuatro = fila.createCell(4);
                    HSSFCell celdacinco = fila.createCell(5);
                    HSSFCell celdaseis = fila.createCell(6);
                    HSSFCell celdasiete = fila.createCell(7);
                    HSSFCell celdaocho = fila.createCell(8);
                    HSSFCell celdanueve = fila.createCell(9);
                    HSSFCell celdadiez = fila.createCell(10);
                    HSSFCell celdaonce = fila.createCell(11);
                    HSSFCell celdadoce = fila.createCell(12);

                    celdauno.setCellValue(users.getString(12));
                    celdados.setCellValue(users.getString(1));
                    celdatres.setCellValue(users.getString(2));
                    celdacuatro.setCellValue(users.getString(3));
                    celdacinco.setCellValue(users.getString(4));
                    celdaseis.setCellValue(users.getString(5));
                    celdasiete.setCellValue(users.getString(6));
                    celdaocho.setCellValue(users.getString(7));
                    celdanueve.setCellValue(users.getString(8));
                    celdadiez.setCellValue(users.getString(9));
                    celdaonce.setCellValue(users.getString(11));

                    System.out.println("Esta Hecho master!"+users.getString(11));
                }
                String ex = "Informe_Febrero";
                FileOutputStream archivo = new FileOutputStream(""+ex+".xls");
                libro.write(archivo);
                archivo.close();
            } catch (SQLException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            }
            JOptionPane.showMessageDialog(null, "Se ha creado el Excel con exito!!!", "Aviso",1);

        }
        if(mesb=="Marzo"){
            try {

                String sql = "SELECT *  FROM libro_auxiliar  where mes = '3' ORDER BY dia ASC";
                ResultSet users = Conectar.getRegistros(sql);
                HSSFWorkbook libro = new HSSFWorkbook();

                //Creamos una instancia de la clase HSSFSheet llamada hoja y la creamos
                HSSFSheet hoja = libro.createSheet();
                HSSFRow encabezados = hoja.createRow(0);
                HSSFCell enc1 = encabezados.createCell(1);
                HSSFCell enc2 = encabezados.createCell(2);
                HSSFCell enc3 = encabezados.createCell(3);
                HSSFCell enc4 = encabezados.createCell(4);
                HSSFCell enc5 = encabezados.createCell(5);
                HSSFCell enc6 = encabezados.createCell(6);
                HSSFCell enc7 = encabezados.createCell(7);
                HSSFCell enc8 = encabezados.createCell(8);
                HSSFCell enc9 = encabezados.createCell(9);
                HSSFCell enc10 = encabezados.createCell(10);
                HSSFCell enc11 = encabezados.createCell(11);
                HSSFCell enc12= encabezados.createCell(12);
                enc1.setCellValue("Mes");
                enc2.setCellValue("Dia");
                enc3.setCellValue("Nro_Cheque");
                enc4.setCellValue("O/P");
                enc5.setCellValue("C/E");
                enc6.setCellValue("Beneficiario");
                enc7.setCellValue("RIF/CI");
                enc8.setCellValue("Observaciones");
                enc9.setCellValue("Debe");
                enc10.setCellValue("Haber");
                enc11.setCellValue("Saldo");
                enc12.setCellValue("Nro Cta");

                HSSFRow Info = hoja.createRow(32);
                HSSFCell rif = Info.createCell(1);
                rif.setCellValue("Alcaldia De San Sebastian El Renacer Rif j-124563");

                while(users.next()){
                    HSSFRow fila = hoja.createRow(users.getRow());
                    HSSFCell celdauno = fila.createCell(1);
                    HSSFCell celdados = fila.createCell(2);
                    HSSFCell celdatres = fila.createCell(3);
                    HSSFCell celdacuatro = fila.createCell(4);
                    HSSFCell celdacinco = fila.createCell(5);
                    HSSFCell celdaseis = fila.createCell(6);
                    HSSFCell celdasiete = fila.createCell(7);
                    HSSFCell celdaocho = fila.createCell(8);
                    HSSFCell celdanueve = fila.createCell(9);
                    HSSFCell celdadiez = fila.createCell(10);
                    HSSFCell celdaonce = fila.createCell(11);
                    HSSFCell celdadoce = fila.createCell(12);

                    celdauno.setCellValue(users.getString(12));
                    celdados.setCellValue(users.getString(1));
                    celdatres.setCellValue(users.getString(2));
                    celdacuatro.setCellValue(users.getString(3));
                    celdacinco.setCellValue(users.getString(4));
                    celdaseis.setCellValue(users.getString(5));
                    celdasiete.setCellValue(users.getString(6));
                    celdaocho.setCellValue(users.getString(7));
                    celdanueve.setCellValue(users.getString(8));
                    celdadiez.setCellValue(users.getString(9));
                    celdaonce.setCellValue(users.getString(11));

                    System.out.println("Esta Hecho master!"+users.getString(11));
                }
                String ex = "Informe_Marzo";
                FileOutputStream archivo = new FileOutputStream(""+ex+".xls");
                libro.write(archivo);
                archivo.close();
            } catch (SQLException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            }
            JOptionPane.showMessageDialog(null, "Se ha creado el Excel con exito!!!", "Aviso",1);

        }
        if(mesb=="Abril"){
            try {

                String sql = "SELECT *  FROM libro_auxiliar  where mes = '4' ORDER BY dia ASC";
                ResultSet users = Conectar.getRegistros(sql);
                HSSFWorkbook libro = new HSSFWorkbook();

                //Creamos una instancia de la clase HSSFSheet llamada hoja y la creamos
                HSSFSheet hoja = libro.createSheet();
                HSSFRow encabezados = hoja.createRow(0);
                HSSFCell enc1 = encabezados.createCell(1);
                HSSFCell enc2 = encabezados.createCell(2);
                HSSFCell enc3 = encabezados.createCell(3);
                HSSFCell enc4 = encabezados.createCell(4);
                HSSFCell enc5 = encabezados.createCell(5);
                HSSFCell enc6 = encabezados.createCell(6);
                HSSFCell enc7 = encabezados.createCell(7);
                HSSFCell enc8 = encabezados.createCell(8);
                HSSFCell enc9 = encabezados.createCell(9);
                HSSFCell enc10 = encabezados.createCell(10);
                HSSFCell enc11 = encabezados.createCell(11);
                HSSFCell enc12= encabezados.createCell(12);
                enc1.setCellValue("Mes");
                enc2.setCellValue("Dia");
                enc3.setCellValue("Nro_Cheque");
                enc4.setCellValue("O/P");
                enc5.setCellValue("C/E");
                enc6.setCellValue("Beneficiario");
                enc7.setCellValue("RIF/CI");
                enc8.setCellValue("Observaciones");
                enc9.setCellValue("Debe");
                enc10.setCellValue("Haber");
                enc11.setCellValue("Saldo");
                enc12.setCellValue("Nro Cta");

                HSSFRow Info = hoja.createRow(32);
                HSSFCell rif = Info.createCell(1);
                rif.setCellValue("Alcaldia De San Sebastian El Renacer Rif j-124563");

                while(users.next()){
                    HSSFRow fila = hoja.createRow(users.getRow());
                    HSSFCell celdauno = fila.createCell(1);
                    HSSFCell celdados = fila.createCell(2);
                    HSSFCell celdatres = fila.createCell(3);
                    HSSFCell celdacuatro = fila.createCell(4);
                    HSSFCell celdacinco = fila.createCell(5);
                    HSSFCell celdaseis = fila.createCell(6);
                    HSSFCell celdasiete = fila.createCell(7);
                    HSSFCell celdaocho = fila.createCell(8);
                    HSSFCell celdanueve = fila.createCell(9);
                    HSSFCell celdadiez = fila.createCell(10);
                    HSSFCell celdaonce = fila.createCell(11);
                    HSSFCell celdadoce = fila.createCell(12);

                    celdauno.setCellValue(users.getString(12));
                    celdados.setCellValue(users.getString(1));
                    celdatres.setCellValue(users.getString(2));
                    celdacuatro.setCellValue(users.getString(3));
                    celdacinco.setCellValue(users.getString(4));
                    celdaseis.setCellValue(users.getString(5));
                    celdasiete.setCellValue(users.getString(6));
                    celdaocho.setCellValue(users.getString(7));
                    celdanueve.setCellValue(users.getString(8));
                    celdadiez.setCellValue(users.getString(9));
                    celdaonce.setCellValue(users.getString(11));

                    System.out.println("Esta Hecho master!"+users.getString(11));
                }
                String ex = "Informe_Abril";
                FileOutputStream archivo = new FileOutputStream(""+ex+".xls");
                libro.write(archivo);
                archivo.close();
            } catch (SQLException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            }
            JOptionPane.showMessageDialog(null, "Se ha creado el Excel con exito!!!", "Aviso",1);

        }
        if(mesb=="Mayo"){
            try {

                String sql = "SELECT *  FROM libro_auxiliar  where mes = '5' ORDER BY dia ASC";
                ResultSet users = Conectar.getRegistros(sql);
                HSSFWorkbook libro = new HSSFWorkbook();

                //Creamos una instancia de la clase HSSFSheet llamada hoja y la creamos
                HSSFSheet hoja = libro.createSheet();
                HSSFRow encabezados = hoja.createRow(0);
                HSSFCell enc1 = encabezados.createCell(1);
                HSSFCell enc2 = encabezados.createCell(2);
                HSSFCell enc3 = encabezados.createCell(3);
                HSSFCell enc4 = encabezados.createCell(4);
                HSSFCell enc5 = encabezados.createCell(5);
                HSSFCell enc6 = encabezados.createCell(6);
                HSSFCell enc7 = encabezados.createCell(7);
                HSSFCell enc8 = encabezados.createCell(8);
                HSSFCell enc9 = encabezados.createCell(9);
                HSSFCell enc10 = encabezados.createCell(10);
                HSSFCell enc11 = encabezados.createCell(11);
                HSSFCell enc12= encabezados.createCell(12);
                enc1.setCellValue("Mes");
                enc2.setCellValue("Dia");
                enc3.setCellValue("Nro_Cheque");
                enc4.setCellValue("O/P");
                enc5.setCellValue("C/E");
                enc6.setCellValue("Beneficiario");
                enc7.setCellValue("RIF/CI");
                enc8.setCellValue("Observaciones");
                enc9.setCellValue("Debe");
                enc10.setCellValue("Haber");
                enc11.setCellValue("Saldo");
                enc12.setCellValue("Nro Cta");

                HSSFRow Info = hoja.createRow(32);
                HSSFCell rif = Info.createCell(1);
                rif.setCellValue("Alcaldia De San Sebastian El Renacer Rif j-124563");

                while(users.next()){
                    HSSFRow fila = hoja.createRow(users.getRow());
                    HSSFCell celdauno = fila.createCell(1);
                    HSSFCell celdados = fila.createCell(2);
                    HSSFCell celdatres = fila.createCell(3);
                    HSSFCell celdacuatro = fila.createCell(4);
                    HSSFCell celdacinco = fila.createCell(5);
                    HSSFCell celdaseis = fila.createCell(6);
                    HSSFCell celdasiete = fila.createCell(7);
                    HSSFCell celdaocho = fila.createCell(8);
                    HSSFCell celdanueve = fila.createCell(9);
                    HSSFCell celdadiez = fila.createCell(10);
                    HSSFCell celdaonce = fila.createCell(11);
                    HSSFCell celdadoce = fila.createCell(12);

                    celdauno.setCellValue(users.getString(12));
                    celdados.setCellValue(users.getString(1));
                    celdatres.setCellValue(users.getString(2));
                    celdacuatro.setCellValue(users.getString(3));
                    celdacinco.setCellValue(users.getString(4));
                    celdaseis.setCellValue(users.getString(5));
                    celdasiete.setCellValue(users.getString(6));
                    celdaocho.setCellValue(users.getString(7));
                    celdanueve.setCellValue(users.getString(8));
                    celdadiez.setCellValue(users.getString(9));
                    celdaonce.setCellValue(users.getString(11));

                    System.out.println("Esta Hecho master!"+users.getString(11));
                }
                String ex = "Informe_Mayo";
                FileOutputStream archivo = new FileOutputStream(""+ex+".xls");
                libro.write(archivo);
                archivo.close();
            } catch (SQLException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            }
            JOptionPane.showMessageDialog(null, "Se ha creado el Excel con exito!!!", "Aviso",1);

        }
        if(mesb=="Junio"){
            try {

                String sql = "SELECT *  FROM libro_auxiliar  where mes = '6' ORDER BY dia ASC";
                ResultSet users = Conectar.getRegistros(sql);
                HSSFWorkbook libro = new HSSFWorkbook();

                //Creamos una instancia de la clase HSSFSheet llamada hoja y la creamos
                HSSFSheet hoja = libro.createSheet();
                HSSFRow encabezados = hoja.createRow(0);
                HSSFCell enc1 = encabezados.createCell(1);
                HSSFCell enc2 = encabezados.createCell(2);
                HSSFCell enc3 = encabezados.createCell(3);
                HSSFCell enc4 = encabezados.createCell(4);
                HSSFCell enc5 = encabezados.createCell(5);
                HSSFCell enc6 = encabezados.createCell(6);
                HSSFCell enc7 = encabezados.createCell(7);
                HSSFCell enc8 = encabezados.createCell(8);
                HSSFCell enc9 = encabezados.createCell(9);
                HSSFCell enc10 = encabezados.createCell(10);
                HSSFCell enc11 = encabezados.createCell(11);
                HSSFCell enc12= encabezados.createCell(12);
                enc1.setCellValue("Mes");
                enc2.setCellValue("Dia");
                enc3.setCellValue("Nro_Cheque");
                enc4.setCellValue("O/P");
                enc5.setCellValue("C/E");
                enc6.setCellValue("Beneficiario");
                enc7.setCellValue("RIF/CI");
                enc8.setCellValue("Observaciones");
                enc9.setCellValue("Debe");
                enc10.setCellValue("Haber");
                enc11.setCellValue("Saldo");
                enc12.setCellValue("Nro Cta");

                HSSFRow Info = hoja.createRow(32);
                HSSFCell rif = Info.createCell(1);
                rif.setCellValue("Alcaldia De San Sebastian El Renacer Rif j-124563");

                while(users.next()){
                    HSSFRow fila = hoja.createRow(users.getRow());
                    HSSFCell celdauno = fila.createCell(1);
                    HSSFCell celdados = fila.createCell(2);
                    HSSFCell celdatres = fila.createCell(3);
                    HSSFCell celdacuatro = fila.createCell(4);
                    HSSFCell celdacinco = fila.createCell(5);
                    HSSFCell celdaseis = fila.createCell(6);
                    HSSFCell celdasiete = fila.createCell(7);
                    HSSFCell celdaocho = fila.createCell(8);
                    HSSFCell celdanueve = fila.createCell(9);
                    HSSFCell celdadiez = fila.createCell(10);
                    HSSFCell celdaonce = fila.createCell(11);
                    HSSFCell celdadoce = fila.createCell(12);

                    celdauno.setCellValue(users.getString(12));
                    celdados.setCellValue(users.getString(1));
                    celdatres.setCellValue(users.getString(2));
                    celdacuatro.setCellValue(users.getString(3));
                    celdacinco.setCellValue(users.getString(4));
                    celdaseis.setCellValue(users.getString(5));
                    celdasiete.setCellValue(users.getString(6));
                    celdaocho.setCellValue(users.getString(7));
                    celdanueve.setCellValue(users.getString(8));
                    celdadiez.setCellValue(users.getString(9));
                    celdaonce.setCellValue(users.getString(11));

                    System.out.println("Esta Hecho master!"+users.getString(11));
                }
                String ex = "Informe_Junio";
                FileOutputStream archivo = new FileOutputStream(""+ex+".xls");
                libro.write(archivo);
                archivo.close();
            } catch (SQLException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            }
            JOptionPane.showMessageDialog(null, "Se ha creado el Excel con exito!!!", "Aviso",1);

        }
        if(mesb=="Julio"){
            try {

                String sql = "SELECT *  FROM libro_auxiliar  where mes = '7' ORDER BY dia ASC";
                ResultSet users = Conectar.getRegistros(sql);
                HSSFWorkbook libro = new HSSFWorkbook();

                //Creamos una instancia de la clase HSSFSheet llamada hoja y la creamos
                HSSFSheet hoja = libro.createSheet();
                HSSFRow encabezados = hoja.createRow(0);
                HSSFCell enc1 = encabezados.createCell(1);
                HSSFCell enc2 = encabezados.createCell(2);
                HSSFCell enc3 = encabezados.createCell(3);
                HSSFCell enc4 = encabezados.createCell(4);
                HSSFCell enc5 = encabezados.createCell(5);
                HSSFCell enc6 = encabezados.createCell(6);
                HSSFCell enc7 = encabezados.createCell(7);
                HSSFCell enc8 = encabezados.createCell(8);
                HSSFCell enc9 = encabezados.createCell(9);
                HSSFCell enc10 = encabezados.createCell(10);
                HSSFCell enc11 = encabezados.createCell(11);
                HSSFCell enc12= encabezados.createCell(12);
                enc1.setCellValue("Mes");
                enc2.setCellValue("Dia");
                enc3.setCellValue("Nro_Cheque");
                enc4.setCellValue("O/P");
                enc5.setCellValue("C/E");
                enc6.setCellValue("Beneficiario");
                enc7.setCellValue("RIF/CI");
                enc8.setCellValue("Observaciones");
                enc9.setCellValue("Debe");
                enc10.setCellValue("Haber");
                enc11.setCellValue("Saldo");
                enc12.setCellValue("Nro Cta");

                HSSFRow Info = hoja.createRow(32);
                HSSFCell rif = Info.createCell(1);
                rif.setCellValue("Alcaldia De San Sebastian El Renacer Rif j-124563");

                while(users.next()){
                    HSSFRow fila = hoja.createRow(users.getRow());
                    HSSFCell celdauno = fila.createCell(1);
                    HSSFCell celdados = fila.createCell(2);
                    HSSFCell celdatres = fila.createCell(3);
                    HSSFCell celdacuatro = fila.createCell(4);
                    HSSFCell celdacinco = fila.createCell(5);
                    HSSFCell celdaseis = fila.createCell(6);
                    HSSFCell celdasiete = fila.createCell(7);
                    HSSFCell celdaocho = fila.createCell(8);
                    HSSFCell celdanueve = fila.createCell(9);
                    HSSFCell celdadiez = fila.createCell(10);
                    HSSFCell celdaonce = fila.createCell(11);
                    HSSFCell celdadoce = fila.createCell(12);

                    celdauno.setCellValue(users.getString(12));
                    celdados.setCellValue(users.getString(1));
                    celdatres.setCellValue(users.getString(2));
                    celdacuatro.setCellValue(users.getString(3));
                    celdacinco.setCellValue(users.getString(4));
                    celdaseis.setCellValue(users.getString(5));
                    celdasiete.setCellValue(users.getString(6));
                    celdaocho.setCellValue(users.getString(7));
                    celdanueve.setCellValue(users.getString(8));
                    celdadiez.setCellValue(users.getString(9));
                    celdaonce.setCellValue(users.getString(11));

                    System.out.println("Esta Hecho master!"+users.getString(11));
                }
                String ex = "Informe_Julio";
                FileOutputStream archivo = new FileOutputStream(""+ex+".xls");
                libro.write(archivo);
                archivo.close();
            } catch (SQLException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            }
            JOptionPane.showMessageDialog(null, "Se ha creado el Excel con exito!!!", "Aviso",1);

        }
        if(mesb=="Agosto"){
            try {

                String sql = "SELECT *  FROM libro_auxiliar  where mes = '8' ORDER BY dia ASC";
                ResultSet users = Conectar.getRegistros(sql);
                HSSFWorkbook libro = new HSSFWorkbook();

                //Creamos una instancia de la clase HSSFSheet llamada hoja y la creamos
                HSSFSheet hoja = libro.createSheet();
                HSSFRow encabezados = hoja.createRow(0);
                HSSFCell enc1 = encabezados.createCell(1);
                HSSFCell enc2 = encabezados.createCell(2);
                HSSFCell enc3 = encabezados.createCell(3);
                HSSFCell enc4 = encabezados.createCell(4);
                HSSFCell enc5 = encabezados.createCell(5);
                HSSFCell enc6 = encabezados.createCell(6);
                HSSFCell enc7 = encabezados.createCell(7);
                HSSFCell enc8 = encabezados.createCell(8);
                HSSFCell enc9 = encabezados.createCell(9);
                HSSFCell enc10 = encabezados.createCell(10);
                HSSFCell enc11 = encabezados.createCell(11);
                HSSFCell enc12= encabezados.createCell(12);
                enc1.setCellValue("Mes");
                enc2.setCellValue("Dia");
                enc3.setCellValue("Nro_Cheque");
                enc4.setCellValue("O/P");
                enc5.setCellValue("C/E");
                enc6.setCellValue("Beneficiario");
                enc7.setCellValue("RIF/CI");
                enc8.setCellValue("Observaciones");
                enc9.setCellValue("Debe");
                enc10.setCellValue("Haber");
                enc11.setCellValue("Saldo");
                enc12.setCellValue("Nro Cta");

                HSSFRow Info = hoja.createRow(32);
                HSSFCell rif = Info.createCell(1);
                rif.setCellValue("Alcaldia De San Sebastian El Renacer Rif j-124563");

                while(users.next()){
                    HSSFRow fila = hoja.createRow(users.getRow());
                    HSSFCell celdauno = fila.createCell(1);
                    HSSFCell celdados = fila.createCell(2);
                    HSSFCell celdatres = fila.createCell(3);
                    HSSFCell celdacuatro = fila.createCell(4);
                    HSSFCell celdacinco = fila.createCell(5);
                    HSSFCell celdaseis = fila.createCell(6);
                    HSSFCell celdasiete = fila.createCell(7);
                    HSSFCell celdaocho = fila.createCell(8);
                    HSSFCell celdanueve = fila.createCell(9);
                    HSSFCell celdadiez = fila.createCell(10);
                    HSSFCell celdaonce = fila.createCell(11);
                    HSSFCell celdadoce = fila.createCell(12);

                    celdauno.setCellValue(users.getString(12));
                    celdados.setCellValue(users.getString(1));
                    celdatres.setCellValue(users.getString(2));
                    celdacuatro.setCellValue(users.getString(3));
                    celdacinco.setCellValue(users.getString(4));
                    celdaseis.setCellValue(users.getString(5));
                    celdasiete.setCellValue(users.getString(6));
                    celdaocho.setCellValue(users.getString(7));
                    celdanueve.setCellValue(users.getString(8));
                    celdadiez.setCellValue(users.getString(9));
                    celdaonce.setCellValue(users.getString(11));

                    System.out.println("Esta Hecho master!"+users.getString(11));
                }
                String ex = "Informe_Agosto";
                FileOutputStream archivo = new FileOutputStream(""+ex+".xls");
                libro.write(archivo);
                archivo.close();
            } catch (SQLException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            }
            JOptionPane.showMessageDialog(null, "Se ha creado el Excel con exito!!!", "Aviso",1);

        }
        if(mesb=="Septiembre"){
            try {

                String sql = "SELECT *  FROM libro_auxiliar  where mes = '9' ORDER BY dia ASC";
                ResultSet users = Conectar.getRegistros(sql);
                HSSFWorkbook libro = new HSSFWorkbook();

                //Creamos una instancia de la clase HSSFSheet llamada hoja y la creamos
                HSSFSheet hoja = libro.createSheet();
                HSSFRow encabezados = hoja.createRow(0);
                HSSFCell enc1 = encabezados.createCell(1);
                HSSFCell enc2 = encabezados.createCell(2);
                HSSFCell enc3 = encabezados.createCell(3);
                HSSFCell enc4 = encabezados.createCell(4);
                HSSFCell enc5 = encabezados.createCell(5);
                HSSFCell enc6 = encabezados.createCell(6);
                HSSFCell enc7 = encabezados.createCell(7);
                HSSFCell enc8 = encabezados.createCell(8);
                HSSFCell enc9 = encabezados.createCell(9);
                HSSFCell enc10 = encabezados.createCell(10);
                HSSFCell enc11 = encabezados.createCell(11);
                HSSFCell enc12= encabezados.createCell(12);
                enc1.setCellValue("Mes");
                enc2.setCellValue("Dia");
                enc3.setCellValue("Nro_Cheque");
                enc4.setCellValue("O/P");
                enc5.setCellValue("C/E");
                enc6.setCellValue("Beneficiario");
                enc7.setCellValue("RIF/CI");
                enc8.setCellValue("Observaciones");
                enc9.setCellValue("Debe");
                enc10.setCellValue("Haber");
                enc11.setCellValue("Saldo");
                enc12.setCellValue("Nro Cta");

                HSSFRow Info = hoja.createRow(32);
                HSSFCell rif = Info.createCell(1);
                rif.setCellValue("Alcaldia De San Sebastian El Renacer Rif j-124563");

                while(users.next()){
                    HSSFRow fila = hoja.createRow(users.getRow());
                    HSSFCell celdauno = fila.createCell(1);
                    HSSFCell celdados = fila.createCell(2);
                    HSSFCell celdatres = fila.createCell(3);
                    HSSFCell celdacuatro = fila.createCell(4);
                    HSSFCell celdacinco = fila.createCell(5);
                    HSSFCell celdaseis = fila.createCell(6);
                    HSSFCell celdasiete = fila.createCell(7);
                    HSSFCell celdaocho = fila.createCell(8);
                    HSSFCell celdanueve = fila.createCell(9);
                    HSSFCell celdadiez = fila.createCell(10);
                    HSSFCell celdaonce = fila.createCell(11);
                    HSSFCell celdadoce = fila.createCell(12);

                    celdauno.setCellValue(users.getString(12));
                    celdados.setCellValue(users.getString(1));
                    celdatres.setCellValue(users.getString(2));
                    celdacuatro.setCellValue(users.getString(3));
                    celdacinco.setCellValue(users.getString(4));
                    celdaseis.setCellValue(users.getString(5));
                    celdasiete.setCellValue(users.getString(6));
                    celdaocho.setCellValue(users.getString(7));
                    celdanueve.setCellValue(users.getString(8));
                    celdadiez.setCellValue(users.getString(9));
                    celdaonce.setCellValue(users.getString(11));

                    System.out.println("Esta Hecho master!"+users.getString(11));
                }
                String ex = "Informe_Septiembre";
                FileOutputStream archivo = new FileOutputStream(""+ex+".xls");
                libro.write(archivo);
                archivo.close();
            } catch (SQLException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            }
            JOptionPane.showMessageDialog(null, "Se ha creado el Excel con exito!!!", "Aviso",1);

        }
        if(mesb=="Octubre"){
            try {

                String sql = "SELECT *  FROM libro_auxiliar  where mes = '10' ORDER BY dia ASC";
                ResultSet users = Conectar.getRegistros(sql);
                HSSFWorkbook libro = new HSSFWorkbook();

                //Creamos una instancia de la clase HSSFSheet llamada hoja y la creamos
                HSSFSheet hoja = libro.createSheet();
                HSSFRow encabezados = hoja.createRow(0);
                HSSFCell enc1 = encabezados.createCell(1);
                HSSFCell enc2 = encabezados.createCell(2);
                HSSFCell enc3 = encabezados.createCell(3);
                HSSFCell enc4 = encabezados.createCell(4);
                HSSFCell enc5 = encabezados.createCell(5);
                HSSFCell enc6 = encabezados.createCell(6);
                HSSFCell enc7 = encabezados.createCell(7);
                HSSFCell enc8 = encabezados.createCell(8);
                HSSFCell enc9 = encabezados.createCell(9);
                HSSFCell enc10 = encabezados.createCell(10);
                HSSFCell enc11 = encabezados.createCell(11);
                HSSFCell enc12= encabezados.createCell(12);
                enc1.setCellValue("Mes");
                enc2.setCellValue("Dia");
                enc3.setCellValue("Nro_Cheque");
                enc4.setCellValue("O/P");
                enc5.setCellValue("C/E");
                enc6.setCellValue("Beneficiario");
                enc7.setCellValue("RIF/CI");
                enc8.setCellValue("Observaciones");
                enc9.setCellValue("Debe");
                enc10.setCellValue("Haber");
                enc11.setCellValue("Saldo");
                enc12.setCellValue("Nro Cta");

                HSSFRow Info = hoja.createRow(32);
                HSSFCell rif = Info.createCell(1);
                rif.setCellValue("Alcaldia De San Sebastian El Renacer Rif j-124563");

                while(users.next()){
                    HSSFRow fila = hoja.createRow(users.getRow());
                    HSSFCell celdauno = fila.createCell(1);
                    HSSFCell celdados = fila.createCell(2);
                    HSSFCell celdatres = fila.createCell(3);
                    HSSFCell celdacuatro = fila.createCell(4);
                    HSSFCell celdacinco = fila.createCell(5);
                    HSSFCell celdaseis = fila.createCell(6);
                    HSSFCell celdasiete = fila.createCell(7);
                    HSSFCell celdaocho = fila.createCell(8);
                    HSSFCell celdanueve = fila.createCell(9);
                    HSSFCell celdadiez = fila.createCell(10);
                    HSSFCell celdaonce = fila.createCell(11);
                    HSSFCell celdadoce = fila.createCell(12);

                    celdauno.setCellValue(users.getString(12));
                    celdados.setCellValue(users.getString(1));
                    celdatres.setCellValue(users.getString(2));
                    celdacuatro.setCellValue(users.getString(3));
                    celdacinco.setCellValue(users.getString(4));
                    celdaseis.setCellValue(users.getString(5));
                    celdasiete.setCellValue(users.getString(6));
                    celdaocho.setCellValue(users.getString(7));
                    celdanueve.setCellValue(users.getString(8));
                    celdadiez.setCellValue(users.getString(9));
                    celdaonce.setCellValue(users.getString(11));

                    System.out.println("Esta Hecho master!"+users.getString(11));
                }
                String ex = "Informe_Octubre";
                FileOutputStream archivo = new FileOutputStream(""+ex+".xls");
                libro.write(archivo);
                archivo.close();
            } catch (SQLException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            }
            JOptionPane.showMessageDialog(null, "Se ha creado el Excel con exito!!!", "Aviso",1);

        }
        if(mesb=="Noviembre"){

            try {

                String sql = "SELECT *  FROM libro_auxiliar  where mes = '11' ORDER BY dia ASC";
                ResultSet users = Conectar.getRegistros(sql);
                HSSFWorkbook libro = new HSSFWorkbook();

                //Creamos una instancia de la clase HSSFSheet llamada hoja y la creamos
                HSSFSheet hoja = libro.createSheet();
                HSSFRow encabezados = hoja.createRow(0);
                HSSFCell enc1 = encabezados.createCell(1);
                HSSFCell enc2 = encabezados.createCell(2);
                HSSFCell enc3 = encabezados.createCell(3);
                HSSFCell enc4 = encabezados.createCell(4);
                HSSFCell enc5 = encabezados.createCell(5);
                HSSFCell enc6 = encabezados.createCell(6);
                HSSFCell enc7 = encabezados.createCell(7);
                HSSFCell enc8 = encabezados.createCell(8);
                HSSFCell enc9 = encabezados.createCell(9);
                HSSFCell enc10 = encabezados.createCell(10);
                HSSFCell enc11 = encabezados.createCell(11);
                HSSFCell enc12= encabezados.createCell(12);
                enc1.setCellValue("Mes");
                enc2.setCellValue("Dia");
                enc3.setCellValue("Nro_Cheque");
                enc4.setCellValue("O/P");
                enc5.setCellValue("C/E");
                enc6.setCellValue("Beneficiario");
                enc7.setCellValue("RIF/CI");
                enc8.setCellValue("Observaciones");
                enc9.setCellValue("Debe");
                enc10.setCellValue("Haber");
                enc11.setCellValue("Saldo");
                enc12.setCellValue("Nro Cta");

                HSSFRow Info = hoja.createRow(32);
                HSSFCell rif = Info.createCell(1);
                rif.setCellValue("Alcaldia De San Sebastian El Renacer Rif j-124563");

                while(users.next()){
                    HSSFRow fila = hoja.createRow(users.getRow());
                    HSSFCell celdauno = fila.createCell(1);
                    HSSFCell celdados = fila.createCell(2);
                    HSSFCell celdatres = fila.createCell(3);
                    HSSFCell celdacuatro = fila.createCell(4);
                    HSSFCell celdacinco = fila.createCell(5);
                    HSSFCell celdaseis = fila.createCell(6);
                    HSSFCell celdasiete = fila.createCell(7);
                    HSSFCell celdaocho = fila.createCell(8);
                    HSSFCell celdanueve = fila.createCell(9);
                    HSSFCell celdadiez = fila.createCell(10);
                    HSSFCell celdaonce = fila.createCell(11);
                    HSSFCell celdadoce = fila.createCell(12);

                    celdauno.setCellValue(users.getString(12));
                    celdados.setCellValue(users.getString(1));
                    celdatres.setCellValue(users.getString(2));
                    celdacuatro.setCellValue(users.getString(3));
                    celdacinco.setCellValue(users.getString(4));
                    celdaseis.setCellValue(users.getString(5));
                    celdasiete.setCellValue(users.getString(6));
                    celdaocho.setCellValue(users.getString(7));
                    celdanueve.setCellValue(users.getString(8));
                    celdadiez.setCellValue(users.getString(9));
                    celdaonce.setCellValue(users.getString(11));

                    System.out.println("Esta Hecho master!"+users.getString(11));
                }
                String ex = "Informe_Noviembre";
                FileOutputStream archivo = new FileOutputStream(""+ex+".xls");
                libro.write(archivo);
                archivo.close();
            } catch (SQLException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            }
            JOptionPane.showMessageDialog(null, "Se ha creado el Excel con exito!!!", "Aviso",1);

        }
        if(mesb=="Diciembre"){

            try {

                String sql = "SELECT *  FROM libro_auxiliar  where mes = '12' ORDER BY dia ASC";
                ResultSet users = Conectar.getRegistros(sql);
                HSSFWorkbook libro = new HSSFWorkbook();

                //Creamos una instancia de la clase HSSFSheet llamada hoja y la creamos
                HSSFSheet hoja = libro.createSheet();
                HSSFRow encabezados = hoja.createRow(0);
                HSSFCell enc1 = encabezados.createCell(1);
                HSSFCell enc2 = encabezados.createCell(2);
                HSSFCell enc3 = encabezados.createCell(3);
                HSSFCell enc4 = encabezados.createCell(4);
                HSSFCell enc5 = encabezados.createCell(5);
                HSSFCell enc6 = encabezados.createCell(6);
                HSSFCell enc7 = encabezados.createCell(7);
                HSSFCell enc8 = encabezados.createCell(8);
                HSSFCell enc9 = encabezados.createCell(9);
                HSSFCell enc10 = encabezados.createCell(10);
                HSSFCell enc11 = encabezados.createCell(11);
                HSSFCell enc12= encabezados.createCell(12);
                enc1.setCellValue("Mes");
                enc2.setCellValue("Dia");
                enc3.setCellValue("Nro_Cheque");
                enc4.setCellValue("O/P");
                enc5.setCellValue("C/E");
                enc6.setCellValue("Beneficiario");
                enc7.setCellValue("RIF/CI");
                enc8.setCellValue("Observaciones");
                enc9.setCellValue("Debe");
                enc10.setCellValue("Haber");
                enc11.setCellValue("Saldo");
                enc12.setCellValue("Nro Cta");

                HSSFRow Info = hoja.createRow(32);
                HSSFCell rif = Info.createCell(1);
                rif.setCellValue("Alcaldia De San Sebastian El Renacer Rif j-124563");

                while(users.next()){
                    HSSFRow fila = hoja.createRow(users.getRow());
                    HSSFCell celdauno = fila.createCell(1);
                    HSSFCell celdados = fila.createCell(2);
                    HSSFCell celdatres = fila.createCell(3);
                    HSSFCell celdacuatro = fila.createCell(4);
                    HSSFCell celdacinco = fila.createCell(5);
                    HSSFCell celdaseis = fila.createCell(6);
                    HSSFCell celdasiete = fila.createCell(7);
                    HSSFCell celdaocho = fila.createCell(8);
                    HSSFCell celdanueve = fila.createCell(9);
                    HSSFCell celdadiez = fila.createCell(10);
                    HSSFCell celdaonce = fila.createCell(11);
                    HSSFCell celdadoce = fila.createCell(12);

                    celdauno.setCellValue(users.getString(12));
                    celdados.setCellValue(users.getString(1));
                    celdatres.setCellValue(users.getString(2));
                    celdacuatro.setCellValue(users.getString(3));
                    celdacinco.setCellValue(users.getString(4));
                    celdaseis.setCellValue(users.getString(5));
                    celdasiete.setCellValue(users.getString(6));
                    celdaocho.setCellValue(users.getString(7));
                    celdanueve.setCellValue(users.getString(8));
                    celdadiez.setCellValue(users.getString(9));
                    celdaonce.setCellValue(users.getString(11));

                    System.out.println("Esta Hecho master!"+users.getString(11));
                }
                String ex = "Informe_Diciembre";
                FileOutputStream archivo = new FileOutputStream(""+ex+".xls");
                libro.write(archivo);
                archivo.close();
            } catch (SQLException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_jButton7ActionPerformed
    }
    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed

        String NumeroCuenta = jComboBox2.getSelectedItem().toString();

        try {

            String sql = "SELECT *  FROM libro_auxiliar  where banco = '" + NumeroCuenta + "' ORDER BY mes ASC";
            ResultSet users = Conectar.getRegistros(sql);
            HSSFWorkbook libro = new HSSFWorkbook();

            //Creamos una instancia de la clase HSSFSheet llamada hoja y la creamos
            HSSFSheet hoja = libro.createSheet();

            HSSFRow encabezados = hoja.createRow(0);
            HSSFCell enc1 = encabezados.createCell(1);
            HSSFCell enc2 = encabezados.createCell(2);
            HSSFCell enc3 = encabezados.createCell(3);
            HSSFCell enc4 = encabezados.createCell(4);
            HSSFCell enc5 = encabezados.createCell(5);
            HSSFCell enc6 = encabezados.createCell(6);
            HSSFCell enc7 = encabezados.createCell(7);
            HSSFCell enc8 = encabezados.createCell(8);
            HSSFCell enc9 = encabezados.createCell(9);
            HSSFCell enc10 = encabezados.createCell(10);
            HSSFCell enc11 = encabezados.createCell(11);
            HSSFCell enc12= encabezados.createCell(12);
            enc1.setCellValue("Mes");
            enc2.setCellValue("Dia");
            enc3.setCellValue("Nro_Cheque");
            enc4.setCellValue("O/P");
            enc5.setCellValue("C/E");
            enc6.setCellValue("Beneficiario___________________________");
            enc7.setCellValue("RIF/CI_________");
            enc8.setCellValue("Observaciones____________________________");
            enc9.setCellValue("Debe");
            enc10.setCellValue("Haber");
            enc11.setCellValue("Saldo");
            enc12.setCellValue("Nro Cta_____________________________");

            HSSFRow Info = hoja.createRow(32);
            HSSFCell rif = Info.createCell(1);
            rif.setCellValue("Alcaldia De San Sebastian El Renacer Rif G-20001237-4");

            while(users.next()){
                HSSFRow fila = hoja.createRow(users.getRow());
                HSSFCell celdauno = fila.createCell(1);
                HSSFCell celdados = fila.createCell(2);
                HSSFCell celdatres = fila.createCell(3);
                HSSFCell celdacuatro = fila.createCell(4);
                HSSFCell celdacinco = fila.createCell(5);
                HSSFCell celdaseis = fila.createCell(6);
                HSSFCell celdasiete = fila.createCell(7);
                HSSFCell celdaocho = fila.createCell(8);
                HSSFCell celdanueve = fila.createCell(9);
                HSSFCell celdadiez = fila.createCell(10);
                HSSFCell celdaonce = fila.createCell(11);
                HSSFCell celdadoce = fila.createCell(12);

                celdauno.setCellValue(users.getString(12));
                celdados.setCellValue(users.getString(1));
                celdatres.setCellValue(users.getString(2));
                celdacuatro.setCellValue(users.getString(3));
                celdacinco.setCellValue(users.getString(4));
                celdaseis.setCellValue(users.getString(5));
                celdasiete.setCellValue(users.getString(6));
                celdaocho.setCellValue(users.getString(7));
                celdanueve.setCellValue(users.getString(8));
                celdadiez.setCellValue(users.getString(9));
                celdaonce.setCellValue(users.getString(10));
                celdadoce.setCellValue(users.getString(11));

                System.out.println("Esta Hecho master!"+users.getString(11));
            }
            String ex = "Informe_Cuenta_"+NumeroCuenta;
            FileOutputStream archivo = new FileOutputStream(""+ex+".xls");
            libro.write(archivo);
            archivo.close();
        } catch (SQLException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
        JOptionPane.showMessageDialog(null, "Se ha creado el Excel con exito!!!", "Aviso",1);

    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
      try {
            Numerocliente = jTextField1.getText();
            String sql = "SELECT *  FROM libro_auxiliar  where rif = '" + Numerocliente + "'";
            ResultSet users = Conectar.getRegistros(sql);
            String mensaje = "WTF DUDE!";
            while (users.next()) {

                jTextArea1.append("Fecha:   " + users.getString(1) + '\n');
                jTextArea1.append("Nro Cheque:   " + users.getString(2) + '\n');
                jTextArea1.append("O/P:  " + users.getString(3) + '\n');
                jTextArea1.append("C/E:  " + users.getString(4) + '\n');
                jTextArea1.append("Beneficiario:   " + users.getString(5) + '\n');
                jTextArea1.append("Rif:  " + users.getString(6) + '\n');
                jTextArea1.append("Descripcion  " + users.getString(7) + '\n');
                Float mnt = users.getFloat(9);
                mnt.toString();
                jTextArea1.append("Monto:" + mnt + '\n');
                jTextArea1.append("________________________________________________________________________________" + '\n');
                jTextArea1.append("" + '\n');

            }

// TODO add your handling code here:
        } catch (SQLException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        jTextArea1.setText("");
    }//GEN-LAST:event_jButton5ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField CEField;
    private javax.swing.JLabel CELabel;
    private javax.swing.JTextField OPField;
    private javax.swing.JLabel OPLabel;
    private javax.swing.JTextField bancoField;
    private javax.swing.JLabel bancoLabel;
    private javax.swing.JTextField beneficiarioField;
    private javax.swing.JLabel beneficiarioLabel;
    private javax.swing.JTextField debeField;
    private javax.swing.JLabel debeLabel;
    private javax.swing.JTextField descripcionField;
    private javax.swing.JLabel descripcionLabel;
    private javax.swing.JTextField diaField;
    private javax.swing.JLabel diaLabel;
    private javax.persistence.EntityManager entityManager;
    private javax.swing.JTextField haberField;
    private javax.swing.JLabel haberLabel;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JSeparator jSeparator9;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private java.util.List<Paneles.LibroAuxiliar> list;
    private javax.swing.JScrollPane masterScrollPane;
    private javax.swing.JTable masterTable;
    private javax.swing.JTextField mesField;
    private javax.swing.JLabel mesLabel;
    private javax.swing.JButton newButton;
    private javax.swing.JTextField nrochequeField;
    private javax.swing.JLabel nrochequeLabel;
    private javax.persistence.Query query;
    private javax.swing.JButton refreshButton;
    private javax.swing.JTextField rifField;
    private javax.swing.JLabel rifLabel;
    private javax.swing.JTextField saldoField;
    private javax.swing.JLabel saldoLabel;
    private javax.swing.JButton saveButton;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
    public static void main(String[] args) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Hoja.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Hoja.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Hoja.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Hoja.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        EventQueue.invokeLater(new Runnable() {
            public void run() {
                JFrame frame = new JFrame();
                frame.setContentPane(new Hoja());
                frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                frame.pack();
                frame.setVisible(true);
            }
        });
    }
    
}
